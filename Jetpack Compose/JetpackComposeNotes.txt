- Jetpack Compose function always call anather composable function
- Any Composable function annotate with @Composable keyword
- Composable function starts with Capital letter
- All Composable functions must have @Composable annotation; this annotation informs the Compose compiler that this function is intended to convert data into UI.
- The function doesn't return anything because they describe the desired screen state instead of constructing UI widgets.

- setContent{
    Column{
        // element in column align vertical
    }
    
    Row{
      // element in row align horizontal
    }
    
    Box{
      // element in box align top left by default like element without constraints
    } 
}


- @Preview 
    - This anootation is just for diplaying contains whithout physically run 
    - we can have row data to function which annotatate with @Preview to get lookup of our view 
    - The function which annotate with @Preview should not take any param otherwise you get error at @Preview
    - We can have multiple function with Annotate with @Preview 
    - @Preview annotate method get internally called, we dont need to explicitly call it
    - We can see live changes in @Preview annotate method
    
    Ex. 
    
    @Preview
    @Composable
    fun PreviewMessageCard1(){
        Text("Your text message")
    }
    
    
    
    @Composable
    fun Show(){
        Text("aaaaa")
        Text("bbbbb")
    }
    - Text below text is like element without constraints 
    
--------------------------------------------------------------------------------------------------------------------------------
Show Image in Preview and in App


When showing image make sure image type only .png or .jpeg else
"java.lang.IllegalArgumentException: Only VectorDrawables and rasterized asset types are supported ex. PNG, JPG"



Image(painter = painterResource(id = R.drawable.android_img_name), contentDescription = message)


@Composable
fun Show(){
    Image(painter = painterResource(id = R.drawable.android_img_name), contentDescription = "some desc")
}

